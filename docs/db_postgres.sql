-- Creación de la base de datos
CREATE DATABASE parking;

-- Usar base de datos parking
USE parking;

-- Creación de tabla towers
CREATE TABLE towers(
    id SERIAL PRIMARY KEY NOT NULL,
    unit VARCHAR(10) NOT NULL,
    floors INTEGER NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP
);


-- Creación de tabla apartaments
CREATE TABLE apartments(
    id SERIAL PRIMARY KEY NOT NULL,
    tower_id INTEGER NOT NULL,
    floor INTEGER NOT NULL,
    unit INTEGER NOT NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    CONSTRAINT fk_tower FOREIGN KEY (tower_id) REFERENCES towers(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Creación de tabla vehicles
CREATE TABLE vehicles(
    id SERIAL PRIMARY KEY NOT NULL,
    plate VARCHAR(10) UNIQUE NOT NULL,
    apartment_id INTEGER NOT NULL,
    description VARCHAR(450) NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    CONSTRAINT fk_apartment FOREIGN KEY (apartment_id) REFERENCES apartments(id) ON DELETE RESTRICT ON UPDATE CASCADE
);

-- Creación de tabla entries
CREATE TABLE entries(
    id SERIAL PRIMARY KEY NOT NULL,
    plate VARCHAR(10) NOT NULL,
    apartment_id INTEGER NOT NULL,
    type VARCHAR(20) NOT NULL,
    description VARCHAR(450) NULL,
    status VARCHAR(20) NOT NULL DEFAULT 'ACTIVE',
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP::TIMESTAMP,
    CONSTRAINT fk_apartment FOREIGN KEY (apartment_id) REFERENCES apartments(id) ON DELETE RESTRICT ON UPDATE CASCADE
);
